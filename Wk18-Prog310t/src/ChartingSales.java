import java.util.Random;

import us.magicalash.apcs.prog310a2.HistogramBar;
import us.magicalash.apcs.prog310t.Histogram;

/*
    Program 310t Charting Sales
    Wesley Rogers 
    1/4/16
    Java 1.8u25, using Eclipse Mars
    Windows 7
    
    Creates a chart of sales for the month of october, where the first sunday is the first.
    
    What I learned: Documenting takes ages. Also, ArrayLists increase in size as you add to them. Can't put something at 2 before you added 0 and 1.
    
    Difficulties: ArrayLists were being a bit strange, but I fixed it by working around with a bit of null magic. 
*/

public class ChartingSales {

    public static void main(String[] args) {
        // TODO Auto-generated method stub
        Histogram sales = new Histogram();
        Random rand = new Random();
        
        for (int i = 1; i<=31; i++){
            switch (i%7){ //I prefer the brackets, makes reading easier with blocks.
                case 0:{ //saturday
                    double salesVal = rand.nextInt(15001);
                    sales.add(new HistogramBar(salesVal));
                    break;
                }
                
                case 1:{ //sunday, add nothing. Print actions are null-safe.
                    sales.add(null);
                    break;
                }
                
                case 2:{ //monday
                    double salesVal = rand.nextInt(30001) + 20000;
                    sales.add(new HistogramBar(salesVal));
                    break;
                }
                
                case 3:{ //tuesday
                    double salesVal = rand.nextInt(20001) + 30000;
                    sales.add(new HistogramBar(salesVal));
                    break;
                }
                
                case 4:case 5:case 6:{ //wednesday, thursday, and friday.
                    double salesVal = rand.nextInt(50001);
                    sales.add(new HistogramBar(salesVal));
                    break;
                }
                
                default: System.exit(1); break; //There is binary modification going on if this gets hit. Which is very bad.
            }
        }
        
        System.out.println("Day Sales   Graph");
        sales.printGraph();
    }

}
/*
Day Sales   Graph

2   45953.0 ********************************************** 
3   34442.0 ********************************** 
4    1483.0 * 
5    2797.0 *** 
6   45528.0 ********************************************** 
7    7225.0 ******* 

9   23112.0 *********************** 
10  35413.0 *********************************** 
11   9585.0 ********** 
12  48053.0 ************************************************ 
13  17977.0 ****************** 
14   6141.0 ****** 

16  23839.0 ************************ 
17  43758.0 ******************************************** 
18  46777.0 *********************************************** 
19   7832.0 ******** 
20  16131.0 **************** 
21   4812.0 ***** 

23  45484.0 ********************************************* 
24  48949.0 ************************************************* 
25   7130.0 ******* 
26  22135.0 ********************** 
27   1400.0 * 
28  12728.0 ************* 

30  44976.0 ********************************************* 
31  34488.0 ********************************** 

Day Sales   Graph

2   34871.0 *********************************** 
3   36349.0 ************************************ 
4    9283.0 ********* 
5   32178.0 ******************************** 
6   40960.0 ***************************************** 
7    6440.0 ****** 

9   22659.0 *********************** 
10  49359.0 ************************************************* 
11  43040.0 ******************************************* 
12   1579.0 ** 
13  35446.0 *********************************** 
14  10401.0 ********** 

16  20660.0 ********************* 
17  43593.0 ******************************************** 
18  31971.0 ******************************** 
19  42854.0 ******************************************* 
20  35100.0 *********************************** 
21  14180.0 ************** 

23  34830.0 *********************************** 
24  34625.0 *********************************** 
25  13369.0 ************* 
26  34251.0 ********************************** 
27  43411.0 ******************************************* 
28  14797.0 *************** 

30  41128.0 ***************************************** 
31  43943.0 ******************************************** 

Day Sales   Graph

2   37968.0 ************************************** 
3   41088.0 ***************************************** 
4   17503.0 ****************** 
5   31669.0 ******************************** 
6   37957.0 ************************************** 
7    2878.0 *** 

9   23017.0 *********************** 
10  31540.0 ******************************** 
11  20370.0 ******************** 
12  13023.0 ************* 
13  38840.0 *************************************** 
14   3552.0 **** 

16  33163.0 ********************************* 
17  48491.0 ************************************************ 
18  19658.0 ******************** 
19  27153.0 *************************** 
20  16631.0 ***************** 
21  14726.0 *************** 

23  43580.0 ******************************************** 
24  32793.0 ********************************* 
25  49194.0 ************************************************* 
26    405.0  
27  45989.0 ********************************************** 
28  13344.0 ************* 

30  22140.0 ********************** 
31  30489.0 ****************************** 

*/